@{
    ViewBag.Title = "EditTaxonomyLevelExternalId";
    Layout = null;
}

<html>
<head>
    @model RRD.FSG.RP.Web.UI.HostedAdmin.ViewModels.EditTaxonomyLevelExternalIdViewModel
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=100">
    <title>RightProspectus</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Styles.Render("~/Content/Kendo/css")
    @Scripts.Render("~/bundles/Kendo")
    
    <script src="~/Scripts/HostedAdmin/EditTaxonamyLevelExternalIdSettings.js"></script>

    <link href="~/Content/RP/Site.css" rel="stylesheet" />

</head>
<body>
    <div>
        @using (Html.BeginForm("EditTaxonomyLevelExternalId", "TaxonomyLevelExternalId", FormMethod.Post, new { id = "frmTaxonomyLevelExternalId" }))
        {
            <div class="navbar navbar-default navbar-fixed-top">
                <div class="container navigationFullMenu nowrap">
                    <div class="navbar-header">
                        @* Checking for modifiedby field here because the table TaxonamyLevelExternalId does not have a primary key column which is an identity field
                            instead is using a composite key whose value is got from other tables. Ideal solution is to check for presence of primary key value which is
                            an identity column. *@
                        @if (Model.ModifiedBy > 0)
                        {
                            <a class="navbar-brand" href="#">Edit Taxonomy Level External</a>
                        }
                        else
                        {
                            <a class="navbar-brand" href="#">Add Taxonomy Level External</a>
                        }

                        <button id="togglebutton" type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                    </div>
                    <div id="navbar-popup" class="navbar-collapse collapse">
                        <ul class="nav navbar-nav navbar-right">
                            <li>
                                <a class="popup-close" id="closeWindow" href="javascript:window.close();">Close Window</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div id="main" class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                        </div>
                        <div class="col-sm-6">
                            <label class="pull-right"><b class="validationMessage">*</b> indicates required field</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <div id="dvValMsg" style="display:none;" class='validation-popup'><div></div><div class='validation-popup-message' id="dvShowMsg"></div></div>
                                @Html.LabelFor(model => model.Level)
                                <span class="mandatoryAsterisk">*</span>
                                @if (Model.SelectedTaxonomyId.Equals(-1))
                                {
                                    @Html.DropDownListFor(model => model.SelectedLevelId, new SelectList(Model.Level, "Value", "Display"), new { @class = "form-control", id = "ComboLevel" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SelectedLevelId, new SelectList(Model.Level, "Value", "Display"), new { @class = "form-control", id = "ComboLevel", @disabled = "disabled" })
                                    @Html.HiddenFor(model => model.SelectedLevelId);
                                }
                            </div>

                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <div id="dvTaxMsg" style="display:none;" class='validation-popup'><div></div><div class='validation-popup-message' id="dvShowTaxMsg"></div></div>
                                @Html.LabelFor(model => model.TaxonomyId)
                                <span class="mandatoryAsterisk">*</span>
                                @if (Model.SelectedTaxonomyId.Equals(-1))
                                {

                                    @Html.DropDownListFor(model => model.SelectedTaxonomyId, new SelectList(Model.TaxonomyId, "Value", "Display"), new { @class = "form-control", id = "comboTaxonomyId" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SelectedTaxonomyId, new SelectList(Model.TaxonomyId, "Value", "Display"), new { @class = "form-control", id = "comboTaxonomyId", @disabled = "disabled" })
                                    @Html.HiddenFor(model => model.SelectedTaxonomyId);
                                }
                            </div>

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ExternalId)
                                <span class="mandatoryAsterisk">*</span>
                                @if (Model.SelectedTaxonomyId.Equals(-1))
                                {
                                    @Html.TextBoxFor(model => model.ExternalId, new { @class = "form-control", placeholder = "External Id", type = "text", id = "txtExternalId", MaxLength = "200" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.ExternalId, new { @class = "form-control", placeholder = "External Id", type = "text", id = "txtExternalId", MaxLength = "200", @readonly = "readonly" })
                                }
                                <input type="hidden" value="@ViewData["Success"].ToString()" id="hdnSuccessOrFailedMessage" />
                                <input type="hidden" id="hdnSelectedTaxnomyId" value="@Model.SelectedTaxonomyId">
                        </div>
                        </div>
                        <div class="col-sm-6">
                            @if (Model.ModifiedBy > 0)
                            {
                            <div class="form-group">
                                    @Html.LabelFor(model => model.ModifiedBy)
                                    @Html.TextBoxFor(model => model.ModifiedByName, new { @class = "form-control", placeholder = "ModifiedBy", type = "text", id = "txtModifiedBy", @readonly = "readonly" })
                                </div>
                            }
                        </div>
                    </div>
                </div>
              
                @* Checking for modifiedby field here because the table TaxonamyLevelExternalId does not have a primary key column which is an identity field
                    instead is using a composite key whose value is got from other tables. Ideal solution is to check for presence of primary key value which is 
                    an identity column. *@
               
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="col-sm-2">
                                
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsPrimary)

                                    @Html.CheckBoxFor(model => model.IsPrimary, new { @class = "form-checkbox", id = "chkIsPrimary" })
                                </div>
                                
                            </div>
                            <div class="col-sm-4">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SendDocumentUpdate)

                                    @Html.CheckBoxFor(model => model.SendDocumentUpdate, new { @class = "form-checkbox", id = "chkSendDocumentUpdate" })
                                </div>

                            </div>
                            <div class="col-sm-8">
                            @if (Model.ModifiedBy > 0)
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UTCLastModifiedDate)
                                    @Html.TextBoxFor(model => model.UTCLastModifiedDate, new { @class = "form-control", placeholder = "ModifiedDate", type = "text", id = "txtModifiedDate", @readonly = "readonly" })
                                </div>
                            }
                            </div>
                        </div>
                    </div>
                <div class="form-inline">
                    <div class="form-group col-sm-2">
                        <button id="submitTaxonomyLeveExternalId" type="submit" class="AlignButton btn btn-default m-top-15">Submit</button>
                    </div>
                </div>

            </div>
        }
    </div>
   
        <script id="divSuccessOrFailedMessage" type="text/x-kendo-template">
            <p class="message">Taxonomy Level External Details Saved Successfully.</p>
            <button class="confirm k-button" style="margin:10px">OK</button>
        </script>
    
    <div>
        <script id="divEditValidations" type="text/x-kendo-template">
        </script>
    </div>
    <div id="dvCheckDataAlreadyExists" data-request-url="@Url.Action("CheckDataAlreadyExists", "TaxonomyLevelExternalId")"></div>
    <div id="dvCheckExternalIdAlreadyExists" data-request-url="@Url.Action("CheckExternalIdAlreadyExists", "TaxonomyLevelExternalId")"></div>
  
   
</body>
</html>
