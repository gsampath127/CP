@{
    ViewBag.Title = "EditDocumentSubstitution";
    Layout = null;
}
<html>
<head>
    @using RRD.FSG.RP.Web.UI.HostedAdmin.ViewModels;
    @model RRD.FSG.RP.Web.UI.HostedAdmin.ViewModels.EditDocumentSubstitutionViewModel

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=100">
    <title>RightProspectus</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Styles.Render("~/Content/Kendo/css")
    @Scripts.Render("~/bundles/Kendo")


    <script src="~/Scripts/jquery-ui.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap-multiselect.js"></script>
    <script src="~/Scripts/HostedAdmin/EditDocumentSubstitutionSettings.js"></script>
    <link href="~/Content/RP/Site.css" rel="stylesheet" />
</head>
<body>
    <div>
        @using (Html.BeginForm("EditDocumentSubstitution", "DocumentSubstitution"))
        {
            <div class="navbar navbar-default navbar-fixed-top">
                <div class="container navigationFullMenu nowrap">
                    <div class="navbar-header">

                        @if (Model.Id > 0)
                        {
                            <a class="navbar-brand" href="#">Edit Document Substitution</a>
                        }
                        else
                        {
                            <a class="navbar-brand" href="#">Add Document Substitution</a>
                        }

                        <button id="togglebutton" type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                    </div>
                    <div id="navbar-popup" class="navbar-collapse collapse">
                        <ul class="nav navbar-nav navbar-right">
                            <li>
                                <a class="popup-close" id="closeWindow" href="javascript:window.close();">Close Window</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div id="main" class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                        </div>
                        <div class="col-sm-6">
                            <label class="pull-right"><b class="validationMessage">*</b> indicates required field</label>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <div id="dvTaxMsg" style="display: none;" class='validation-popup'>
                                    <div></div>
                                    <div class='validation-popup-message' id="dvShowTaxMsg"></div>
                                </div>

                                @Html.LabelFor(model => model.DocumentType)
                                <span class="mandatoryAsterisk">*</span>
                                @Html.HiddenFor(model => model.Id, new { @id = "hdnDocumentSubstitutionID" })
                                @if (Model.SelectedDocumentType == null)//add
                                {
                                    @Html.DropDownListFor(model => model.SelectedDocumentType, new SelectList(Model.DocumentType, "MarketId", "Name"), new { @class = "form-control", id = "comboDocumentType" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SelectedDocumentType, new SelectList(Model.DocumentType, "MarketId", "Name"), new { @class = "form-control", id = "comboDocumentType", disabled = "disabled" })
                                    @Html.HiddenFor(model => model.SelectedDocumentType)
                                }
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <div class="form-group">
                                    </div>
                                    <input type="hidden" value="@ViewData["Success"].ToString()" id="hdnSuccessOrFailedMessage" />
                                </div>

                            </div>

                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <div id="dvTaxMsg" style="display: none;" class='validation-popup'>
                                    <div></div>
                                    <div class='validation-popup-message' id="dvShowTaxMsg"></div>
                                </div>

                                @Html.LabelFor(model => model.SubstituteDocumentType)
                                <span class="mandatoryAsterisk">*</span>
                                @if (Model.SelectedSubstituteDocumentType == null)
                                {
                                    @Html.DropDownListFor(model => model.SelectedSubstituteDocumentType, new SelectList(Model.SubstituteDocumentType, "MarketId", "Name"), new { @class = "form-control", id = "comboSubstituteDocumentType" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SelectedSubstituteDocumentType, new SelectList(Model.SubstituteDocumentType, "MarketId", "Name"), new { @class = "form-control", id = "comboSubstituteDocumentType" })
                                    @Html.HiddenFor(model => model.SelectedSubstituteDocumentType)
                                }
                            </div>
                        </div>
                    </div>
                </div>
                @if (Model.Id > 0)
                {
                    <div class="row">
                        <div class="col-lg-12">

                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ModifiedDate)
                                    <span class="mandatoryAsterisk">*</span>
                                    @Html.TextBoxFor(model => model.ModifiedDate, new { @class = "form-control", placeholder = "Modified Date", type = "text", id = "txtModifiedByName", disabled = "disabled" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ModifiedByName)
                                    <span class="mandatoryAsterisk">*</span>
                                    @Html.TextBoxFor(model => model.ModifiedByName, new { @class = "form-control", type = "text", id = "txtModifiedByName", disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                    </div>
                }


                <div class="row">
                    <div class="col-lg-12">

                        <div class="col-sm-6">
                            <div class="form-group">

                                @Html.LabelFor(model => model.NDocumentType)

                                <br />
                                <select id="lstNDocumentType" multiple="multiple"></select>

                                <input type="hidden" id="selectedNDocumentType" name="selectedNDocumentType" />

                            </div>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <button id="submitDocumentSubstitution" type="submit" class="AlignButton btn btn-default m-top-15">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div>
                <script id="divDocumentSubstitutionValidations" type="text/x-kendo-template">
                </script>
            </div>
            <div>
                <script id="divSuccessOrFailedMessage" type="text/x-kendo-template">
                    <p class="message">Document Substitution Saved Successfully.</p>
                    <button class="confirm k-button" style="margin:10px">OK</button>
                </script>
            </div>

            <div id="footer" class="layoutFooter"></div>

        }
    </div>
    <div id="dvLoadNDocumentType" data-request-url="@Url.Action("GetNDocumentType", "DocumentSubstitution")"></div>
    <div id="dvPreSelectNDocumentType" data-request-url="@Url.Action("GetPreSelectNDocumentType", "DocumentSubstitution")"></div>
</body>
</html>