@{
    ViewBag.Title = "EditSite";
    Layout = null;
}

<html>
<head>
    @model RRD.FSG.RP.Web.UI.HostedAdmin.ViewModels.EditSiteViewModel
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=100">
    <title>RightProspectus</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Styles.Render("~/Content/Kendo/css")
    @Scripts.Render("~/bundles/Kendo")
    <script src="~/Scripts/HostedAdmin/EditSiteSettings.js"></script>
    <link href="~/Content/RP/Site.css" rel="stylesheet" />

</head>
<body>
    <div>
        @using (Html.BeginForm("EditSite", "Site"))
        {
            <div class="navbar navbar-default navbar-fixed-top">
                <div class="container navigationFullMenu nowrap">
                    <div class="navbar-header">
                        @if (Model.SiteID == 0)
                        {
                            <a class="navbar-brand" href="#">Add Site</a>
                        }
                        else
                        {
                            <a class="navbar-brand" href="#">Edit Site</a>
                        }

                        <button id="togglebutton" type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                    </div>
                    <div id="navbar-popup" class="navbar-collapse collapse">
                        <ul class="nav navbar-nav navbar-right">
                            <li>
                                <a class="popup-close" id="closeWindow" href="javascript:window.close();">Close Window</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>

            <div id="main" class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                        </div>
                        <div class="col-sm-6">
                            <label class="pull-right"><b class="validationMessage">*</b> indicates required field</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SiteName)
                                <span class="mandatoryAsterisk">*</span>
                                @Html.TextBoxFor(model => model.SiteName, new { @class = "form-control", placeholder = "Site Name", type = "text", id = "txtSiteName" })
                                @Html.HiddenFor(model => model.SiteName, new { @id = "hdnSiteName" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TemplateNames)
                                <span class="mandatoryAsterisk">*</span>
                                @Html.DropDownListFor(model => model.SelectedTemplateID, new System.Web.Mvc.SelectList(Model.TemplateNames, "Value", "Display"), new { @class = "form-control", id = "comboTemplateNames" })


                                @Html.HiddenFor(model => model.SiteID, new { @id = "hdnSiteID" })
                                @Html.HiddenFor(model => model.BaseURL, new { @id = "hdnBaseURL" })
                                <input type="hidden" value="@ViewData["Success"].ToString()" id="hdnSuccessOrFailedMessage" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Description)
                                <span class="mandatoryAsterisk">*</span>
                                @Html.TextBoxFor(model => model.Description, new { @class = "form-control", placeholder = "Site Name", type = "text", id = "txtDescription" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PageDescriptions)
                                <span class="mandatoryAsterisk">*</span>
                                @Html.DropDownListFor(model => model.SelectedDefaultPageNameID, new System.Web.Mvc.SelectList(Model.PageDescriptions, "Value", "Display"), new { @class = "form-control", id = "comboDefaultPageNames" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @if (Model.DisableDefaultSiteCheckbox)
                                { 
                                    @Html.CheckBoxFor(model => model.IsDefaultSite, new { id = "chkIsDefaultSite", @disabled = "disabled" })
                                    @Html.HiddenFor(model => model.DisableDefaultSiteCheckbox, new { @id = "hdnDisableDefaultSiteCheckbox" })
                                }
                                else
                                {
                                    @Html.CheckBoxFor(model => model.IsDefaultSite, new { id = "chkIsDefaultSite"})
                                }
                                @Html.LabelFor(model => model.IsDefaultSite)
                            </div>
                        </div>                        
                    </div>
                </div>

                <div id="divTemplatePageImage" class="row">
                    <div class="col-lg-12">
                        <div class="col-sm-12">
                            <img id="imgTemplatePage" />
                        </div>
                    </div>
                </div>

                <div class="form-inline">
                    <div class="form-group col-sm-2">
                        <button id="submitSite" type="submit" class="AlignButton btn btn-default m-top-15">Submit</button>
                    </div>
                </div>
            </div>
            <div>
                <script id="divSiteValidations" type="text/x-kendo-template">
                </script>
            </div>
            <div>
                <script id="divSuccessOrFailedMessage" type="text/x-kendo-template">
                    <p class="message">Site Details Saved Successfully.</p>
                    <button class="confirm k-button" style="margin:10px">OK</button>
                </script>
            </div>


            <div id="footer" class="layoutFooter"></div>
        }
    </div>
    <div id="dvLoadDefaultPageNames" data-request-url="@Url.Action("LoadDefaultPageNames", "Site")"></div>
    <div id="dvCheckSiteNameAlreadyExists" data-request-url="@Url.Action("CheckSiteNameAlreadyExists", "Site")"></div>
</body>
</html>
