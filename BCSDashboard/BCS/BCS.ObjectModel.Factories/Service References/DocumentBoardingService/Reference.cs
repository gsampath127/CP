//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BCS.ObjectModel.Factories.DocumentBoardingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnBoardingRequest", Namespace="http://schemas.datacontract.org/2004/07/RRD.RightProspectus")]
    [System.SerializableAttribute()]
    public partial class OnBoardingRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EdgarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstFundNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProsDocFundSiteUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProsIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EdgarID {
            get {
                return this.EdgarIDField;
            }
            set {
                if ((this.EdgarIDField.Equals(value) != true)) {
                    this.EdgarIDField = value;
                    this.RaisePropertyChanged("EdgarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstFundName {
            get {
                return this.FirstFundNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstFundNameField, value) != true)) {
                    this.FirstFundNameField = value;
                    this.RaisePropertyChanged("FirstFundName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProsDocFundSiteUrl {
            get {
                return this.ProsDocFundSiteUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ProsDocFundSiteUrlField, value) != true)) {
                    this.ProsDocFundSiteUrlField = value;
                    this.RaisePropertyChanged("ProsDocFundSiteUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProsIds {
            get {
                return this.ProsIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProsIdsField, value) != true)) {
                    this.ProsIdsField = value;
                    this.RaisePropertyChanged("ProsIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnBoardingDownloadCompleteResponse", Namespace="http://schemas.datacontract.org/2004/07/RRD.RightProspectus")]
    [System.SerializableAttribute()]
    public partial class OnBoardingDownloadCompleteResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFValidatedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RPProsDocUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RPUpdateStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFValidatedStatus {
            get {
                return this.PDFValidatedStatusField;
            }
            set {
                if ((this.PDFValidatedStatusField.Equals(value) != true)) {
                    this.PDFValidatedStatusField = value;
                    this.RaisePropertyChanged("PDFValidatedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RPProsDocUrl {
            get {
                return this.RPProsDocUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.RPProsDocUrlField, value) != true)) {
                    this.RPProsDocUrlField = value;
                    this.RaisePropertyChanged("RPProsDocUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RPUpdateStatus {
            get {
                return this.RPUpdateStatusField;
            }
            set {
                if ((this.RPUpdateStatusField.Equals(value) != true)) {
                    this.RPUpdateStatusField = value;
                    this.RaisePropertyChanged("RPUpdateStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnBoardingDownloadReviewResponse", Namespace="http://schemas.datacontract.org/2004/07/RRD.RightProspectus")]
    [System.SerializableAttribute()]
    public partial class OnBoardingDownloadReviewResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyFolderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DownloadStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBookMarkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRevisedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFValidatedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PageHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PageWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProsDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProsDocUrlPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempHostedFileURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempHostedFileWithPathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyFolderName {
            get {
                return this.CompanyFolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyFolderNameField, value) != true)) {
                    this.CompanyFolderNameField = value;
                    this.RaisePropertyChanged("CompanyFolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DownloadStatus {
            get {
                return this.DownloadStatusField;
            }
            set {
                if ((this.DownloadStatusField.Equals(value) != true)) {
                    this.DownloadStatusField = value;
                    this.RaisePropertyChanged("DownloadStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBookMarked {
            get {
                return this.IsBookMarkedField;
            }
            set {
                if ((this.IsBookMarkedField.Equals(value) != true)) {
                    this.IsBookMarkedField = value;
                    this.RaisePropertyChanged("IsBookMarked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRevised {
            get {
                return this.IsRevisedField;
            }
            set {
                if ((this.IsRevisedField.Equals(value) != true)) {
                    this.IsRevisedField = value;
                    this.RaisePropertyChanged("IsRevised");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFValidatedStatus {
            get {
                return this.PDFValidatedStatusField;
            }
            set {
                if ((this.PDFValidatedStatusField.Equals(value) != true)) {
                    this.PDFValidatedStatusField = value;
                    this.RaisePropertyChanged("PDFValidatedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PageHeight {
            get {
                return this.PageHeightField;
            }
            set {
                if ((this.PageHeightField.Equals(value) != true)) {
                    this.PageHeightField = value;
                    this.RaisePropertyChanged("PageHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PageWidth {
            get {
                return this.PageWidthField;
            }
            set {
                if ((this.PageWidthField.Equals(value) != true)) {
                    this.PageWidthField = value;
                    this.RaisePropertyChanged("PageWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProsDocTypeID {
            get {
                return this.ProsDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProsDocTypeIDField, value) != true)) {
                    this.ProsDocTypeIDField = value;
                    this.RaisePropertyChanged("ProsDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProsDocUrlPath {
            get {
                return this.ProsDocUrlPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ProsDocUrlPathField, value) != true)) {
                    this.ProsDocUrlPathField = value;
                    this.RaisePropertyChanged("ProsDocUrlPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempHostedFileURL {
            get {
                return this.TempHostedFileURLField;
            }
            set {
                if ((object.ReferenceEquals(this.TempHostedFileURLField, value) != true)) {
                    this.TempHostedFileURLField = value;
                    this.RaisePropertyChanged("TempHostedFileURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempHostedFileWithPath {
            get {
                return this.TempHostedFileWithPathField;
            }
            set {
                if ((object.ReferenceEquals(this.TempHostedFileWithPathField, value) != true)) {
                    this.TempHostedFileWithPathField = value;
                    this.RaisePropertyChanged("TempHostedFileWithPath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReviewCompleteRequest", Namespace="http://schemas.datacontract.org/2004/07/RRD.RightProspectus")]
    [System.SerializableAttribute()]
    public partial class ReviewCompleteRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyFolderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EdgarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRevisedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OriginalBookMarkStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PageHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PageWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProsDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProsIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenamedFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempHostedFileWithPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdatedBookMarkStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyFolderName {
            get {
                return this.CompanyFolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyFolderNameField, value) != true)) {
                    this.CompanyFolderNameField = value;
                    this.RaisePropertyChanged("CompanyFolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EdgarID {
            get {
                return this.EdgarIDField;
            }
            set {
                if ((this.EdgarIDField.Equals(value) != true)) {
                    this.EdgarIDField = value;
                    this.RaisePropertyChanged("EdgarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRevised {
            get {
                return this.IsRevisedField;
            }
            set {
                if ((this.IsRevisedField.Equals(value) != true)) {
                    this.IsRevisedField = value;
                    this.RaisePropertyChanged("IsRevised");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OriginalBookMarkStatus {
            get {
                return this.OriginalBookMarkStatusField;
            }
            set {
                if ((this.OriginalBookMarkStatusField.Equals(value) != true)) {
                    this.OriginalBookMarkStatusField = value;
                    this.RaisePropertyChanged("OriginalBookMarkStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PageHeight {
            get {
                return this.PageHeightField;
            }
            set {
                if ((this.PageHeightField.Equals(value) != true)) {
                    this.PageHeightField = value;
                    this.RaisePropertyChanged("PageHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PageWidth {
            get {
                return this.PageWidthField;
            }
            set {
                if ((this.PageWidthField.Equals(value) != true)) {
                    this.PageWidthField = value;
                    this.RaisePropertyChanged("PageWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProsDocTypeID {
            get {
                return this.ProsDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProsDocTypeIDField, value) != true)) {
                    this.ProsDocTypeIDField = value;
                    this.RaisePropertyChanged("ProsDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProsIds {
            get {
                return this.ProsIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProsIdsField, value) != true)) {
                    this.ProsIdsField = value;
                    this.RaisePropertyChanged("ProsIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RenamedFileName {
            get {
                return this.RenamedFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RenamedFileNameField, value) != true)) {
                    this.RenamedFileNameField = value;
                    this.RaisePropertyChanged("RenamedFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempHostedFileWithPath {
            get {
                return this.TempHostedFileWithPathField;
            }
            set {
                if ((object.ReferenceEquals(this.TempHostedFileWithPathField, value) != true)) {
                    this.TempHostedFileWithPathField = value;
                    this.RaisePropertyChanged("TempHostedFileWithPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedBookMarkStatus {
            get {
                return this.UpdatedBookMarkStatusField;
            }
            set {
                if ((this.UpdatedBookMarkStatusField.Equals(value) != true)) {
                    this.UpdatedBookMarkStatusField = value;
                    this.RaisePropertyChanged("UpdatedBookMarkStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PDFWorkflowStatus", Namespace="http://schemas.datacontract.org/2004/07/RRD.RightProspectus")]
    [System.SerializableAttribute()]
    public partial class PDFWorkflowStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPDFBookmarkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPDFValidatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PageHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PageWidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPDFBookmarked {
            get {
                return this.IsPDFBookmarkedField;
            }
            set {
                if ((this.IsPDFBookmarkedField.Equals(value) != true)) {
                    this.IsPDFBookmarkedField = value;
                    this.RaisePropertyChanged("IsPDFBookmarked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPDFValidated {
            get {
                return this.IsPDFValidatedField;
            }
            set {
                if ((this.IsPDFValidatedField.Equals(value) != true)) {
                    this.IsPDFValidatedField = value;
                    this.RaisePropertyChanged("IsPDFValidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PageHeight {
            get {
                return this.PageHeightField;
            }
            set {
                if ((this.PageHeightField.Equals(value) != true)) {
                    this.PageHeightField = value;
                    this.RaisePropertyChanged("PageHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PageWidth {
            get {
                return this.PageWidthField;
            }
            set {
                if ((this.PageWidthField.Equals(value) != true)) {
                    this.PageWidthField = value;
                    this.RaisePropertyChanged("PageWidth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://RRD.RightProspectus", ConfigurationName="DocumentBoardingService.IDocumentOnboardContract")]
    public interface IDocumentOnboardContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RRD.RightProspectus/IDocumentOnboardContract/Download", ReplyAction="http://RRD.RightProspectus/IDocumentOnboardContract/DownloadResponse")]
        BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingDownloadCompleteResponse Download(BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RRD.RightProspectus/IDocumentOnboardContract/DownloadAndReview", ReplyAction="http://RRD.RightProspectus/IDocumentOnboardContract/DownloadAndReviewResponse")]
        BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingDownloadReviewResponse DownloadAndReview(BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RRD.RightProspectus/IDocumentOnboardContract/CompleteDownloadAndReview", ReplyAction="http://RRD.RightProspectus/IDocumentOnboardContract/CompleteDownloadAndReviewResp" +
            "onse")]
        BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingDownloadCompleteResponse CompleteDownloadAndReview(BCS.ObjectModel.Factories.DocumentBoardingService.ReviewCompleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RRD.RightProspectus/IDocumentOnboardContract/CheckPDFAndUpdateBookMarksVie" +
            "w", ReplyAction="http://RRD.RightProspectus/IDocumentOnboardContract/CheckPDFAndUpdateBookMarksVie" +
            "wResponse")]
        BCS.ObjectModel.Factories.DocumentBoardingService.PDFWorkflowStatus CheckPDFAndUpdateBookMarksView(string FileNameWithPath, string DocumentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://RRD.RightProspectus/IDocumentOnboardContract/UpdateBookMarkActionFromUser", ReplyAction="http://RRD.RightProspectus/IDocumentOnboardContract/UpdateBookMarkActionFromUserR" +
            "esponse")]
        void UpdateBookMarkActionFromUser(string FileNameWithPath, bool BookMarkPDF);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentOnboardContractChannel : BCS.ObjectModel.Factories.DocumentBoardingService.IDocumentOnboardContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentOnboardContractClient : System.ServiceModel.ClientBase<BCS.ObjectModel.Factories.DocumentBoardingService.IDocumentOnboardContract>, BCS.ObjectModel.Factories.DocumentBoardingService.IDocumentOnboardContract {
        
        public DocumentOnboardContractClient() {
        }
        
        public DocumentOnboardContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentOnboardContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentOnboardContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentOnboardContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingDownloadCompleteResponse Download(BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingRequest request) {
            return base.Channel.Download(request);
        }
        
        public BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingDownloadReviewResponse DownloadAndReview(BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingRequest request) {
            return base.Channel.DownloadAndReview(request);
        }
        
        public BCS.ObjectModel.Factories.DocumentBoardingService.OnBoardingDownloadCompleteResponse CompleteDownloadAndReview(BCS.ObjectModel.Factories.DocumentBoardingService.ReviewCompleteRequest request) {
            return base.Channel.CompleteDownloadAndReview(request);
        }
        
        public BCS.ObjectModel.Factories.DocumentBoardingService.PDFWorkflowStatus CheckPDFAndUpdateBookMarksView(string FileNameWithPath, string DocumentTypeID) {
            return base.Channel.CheckPDFAndUpdateBookMarksView(FileNameWithPath, DocumentTypeID);
        }
        
        public void UpdateBookMarkActionFromUser(string FileNameWithPath, bool BookMarkPDF) {
            base.Channel.UpdateBookMarkActionFromUser(FileNameWithPath, BookMarkPDF);
        }
    }
}
